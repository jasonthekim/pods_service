apiVersion: apps/v1
kind: Deployment
metadata:
  name: neo-test
spec:
  selector:
    matchLabels:
      app: neo-test
  template:
    metadata:
      labels:
        app: neo-test
    spec:
      volumes:
      - name: certs
        secret:
          secretName: pods-certs

      containers:
      - name: neo4j
        image: neo4j
        imagePullPolicy: Always
        command: [
          "/bin/bash",
          "-c",
          'export NEO4J_dbms_default__advertised__address=$(hostname -f) && exec /docker-entrypoint.sh "neo4j"'
        ]
        resources:
          limits:
            memory: "4G"
            cpu: "2000"
          requests:
            memory: "1G"
            cpu: "1000"

        env:
        - name: NEO4JLABS_PLUGINS
          value: '["apoc", "n10s"]'
        - name: NEO4J_dbms_ssl_policy_bolt_enabled
          value: "true"
        - name: NEO4J_dbms_ssl_policy_bolt_base__directory
          value: "/certificates/bolt"
        - name: NEO4J_dbms_ssl_policy_bolt_private__key
          value: "tls.key"
        - name: NEO4J_dbms_ssl_policy_bolt_public__certificate
          value: "tls.crt"
        - name: NEO4J_dbms_ssl_policy_bolt_client__auth
          value: "NONE"
        - name: NEO4J_dbms_connector_bolt_tls__level
          value: "REQUIRED"
        - name: NEO4J_dbms_security_auth__enabled
          value: "true"
        - name: NEO4J_dbms_mode
          value: "SINGLE"
        - name: apoc.initializer.system.1
          value: "CREATE USER adminusernamehere SET PLAINTEXT PASSWORD adminpasswordhere"
        - name: apoc.initializer.system.2
          value: "CREATE USER usernamehere SET PLAINTEXT PASSWORD passwordhere"

        ports:
        - containerPort: 7474
          name: browser
        - containerPort: 7687
          name: bolt

        volumeMounts:
        - name: pre-install
          mountPath: /certificates/bolt
