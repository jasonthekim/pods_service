apiVersion: apps/v1
kind: Deployment
metadata:
  name: MAKEFILE_SERVICE_NAME-main
spec:
  selector:
    matchLabels:
      app: MAKEFILE_SERVICE_NAME-main
  template:
    metadata:
      labels:
        app: MAKEFILE_SERVICE_NAME-main
    spec:
      containers:
      - name: MAKEFILE_SERVICE_NAME-main
        imagePullPolicy: Never
        image: MAKEFILE_SERVICE_NAME/core:MAKEFILE_TAG
#DEV        command: ["jupyter", "notebook", "--port=8888", "--no-browser", "--ip=0.0.0.0", "--allow-root"]
        resources:
          limits:
            cpu: "2"
            memory: "2G"
        ports:
        - name: fastapi
          containerPort: 5000
#DEV        - name: jupyter
#DEV          containerPort: 8888
        env:
        - name: SERVICE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: tapis-MAKEFILE_SERVICE_NAME-secrets
              key: service-password
        - name: NEO_PASSWORD
          valueFrom:
            secretKeyRef:
              name: tapis-MAKEFILE_SERVICE_NAME-secrets
              key: neo-password
        - name: RABBIT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: tapis-MAKEFILE_SERVICE_NAME-secrets
              key: rabbit-password
        volumeMounts:
        - name: MAKEFILE_SERVICE_NAME-config
          mountPath: /home/tapis/config.json
          subPath: config.json
#DEV        - name: devfolder
#DEV          mountPath: /home/tapis/service
      volumes:
      - name: MAKEFILE_SERVICE_NAME-config
        configMap: 
          name: MAKEFILE_SERVICE_NAME-config 
#DEV      - name: devfolder
#DEV        hostPath:
#DEV          path: /kg_service #NOTE FOR MINIKUBE: Minikube is a vm, you have to minikube mount for hostpath to work
#DEV          type: Directory
